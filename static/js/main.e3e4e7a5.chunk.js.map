{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","placeholder","value","onChange","event","target","backgroundColor","rows","console","log","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","length","Alert","alert","msg","data-bs-dismiss","App","setMode","_useState3","_useState4","setAlert","showAlert","message","aboutText","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.e3e4e7a5.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n        </li> */}\r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n      <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n      <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string\r\n}","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        console.log(\"Uppercase was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n    const handleLoClick = ()=>{\r\n      console.log(\"Lowercase was clicked\");\r\n      let newText = text.toLowerCase();\r\n      setText(newText);\r\n    }\r\n    const handleClearClick = ()=>{\r\n      let newText = \"\";\r\n      setText(newText);\r\n    }\r\n    const handleCopy = ()=>{\r\n      let text = document.getElementById('myBox');\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    const [text,setText] = useState('');   //Hooks\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" placeholder=\"Enter text here\" value={text} onChange={handleOnChange} \r\n        style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to uppercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to lowercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n    </div>\r\n    <div className=\"container my-2\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n      <h2>Your text summary</h2>\r\n      <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n      <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alert && <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n        <strong>{props.alert.type}</strong> : {props.alert.msg}\r\n        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n    </div>        \r\n  )\r\n}\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n  }   \n  const toggleMode = ()=>{\n    if(mode === 'light')\n    {\n      setMode('dark');\n      document.body.style.backgroundColor = '#050b1c';\n      showAlert(\"Dark Mode has been enabled\", \"Success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been enabled\", \"Success\");\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} />\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    {/* <Switch>\n          <Route exact path=\"/\"> */}\n          <TextForm heading=\"Enter the text to analyze below\" mode={mode}/>\n          {/* </Route>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n    </Switch> */}\n    </div>  \n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}